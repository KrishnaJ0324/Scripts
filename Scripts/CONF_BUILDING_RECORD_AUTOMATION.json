{
  "Building/Street Cut/Tree_Removal/NA": {
    "WorkflowTaskUpdateAfter": [
      {
        "metadata": {
          "description": "Automatically assess a fee when the Completeness Check task is set to Correction Required",
          "operators": {},
          "errorHandling": "retry",
          "maxRetries": 3,
          "retryDelay": 5000
        },
        "preScript": "if (hasExistingFee('ABCARTSA02')) { skipAction('Duplicate fee already exists'); }",
        "criteria": {
          "allowBalance": false,
          "task": [
            "Completeness Check"
          ],
          "status": [
            "Correction Required"
          ]
        },
        "action": {
          "assessFees": [
            {
              "feeSchedule": "ABC_ARTS_APP",
              "feeCode": "ABCARTSA02",
              "feeQuantity": 1,
              "feeInvoice": "Y",
              "feePeriod": "FINAL"
            }
          ],
          "notifications": [
            {
              "type": "email",
              "template": "fee_assessment_notification",
              "recipients": [
                "applicant",
                "reviewer"
              ]
            }
          ]
        },
        "postScript": "logAction('fee_assessed', {task: criteria.task, status: criteria.status, timestamp: new Date()}); notifyApplicant('Fee assessed for correction required - please check your email for details');"
      }
    ]
  },
  "Building/Electrical/Residential/NA": {
    "WorkflowTaskUpdateAfter": [
      {
        "metadata": {
          "description": "Test new record append",
          "operators": {},
          "errorHandling": "abort",
          "maxRetries": 1,
          "retryDelay": 1000
        },
        "preScript": "if (hasExistingFee('ELEC_FEE')) { skipAction('Fee already exists for this task'); }",
        "criteria": {
          "allowBalance": true,
          "task": [
            "Inspection"
          ],
          "status": [
            "Pending Approval"
          ]
        },
        "action": {
          "assessFees": [
            {
              "feeSchedule": "ELECTRIC_SCHEDULE",
              "feeCode": "ELEC_FEE01",
              "feeQuantity": 1,
              "feeInvoice": "Y",
              "feePeriod": "FINAL"
            }
          ],
          "notifications": [
            {
              "type": "sms",
              "template": "new_task_assessment_sms",
              "recipients": [
                "contractor"
              ]
            }
          ]
        },
        "postScript": "logAction('new_fee_assessed', {task: criteria.task, status: criteria.status, timestamp: new Date()});"
      }
    ]
  }
}