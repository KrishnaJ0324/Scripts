{
  "Building/Street Cut/Tree_Removal/NA": {
    "WorkflowTaskUpdateAfter": [
      {
        "metadata": {
          "description": "Automatically assess a fee when the Completeness Check task is set to Correction Required",
          "operators": {},
          "errorHandling": "retry",
          "maxRetries": 3,
          "retryDelay": 5000,
          "configurableFees": true,
          "gracePeriod": {
            "enabled": true,
            "duration": "24h",
            "notifications": [
              "12h",
              "6h",
              "1h"
            ]
          },
          "paymentIntegration": {
            "provider": "stripe",
            "webhookUrl": "${config.paymentWebhookUrl}",
            "retryPolicy": "exponential"
          }
        },
        "preScript": "if (hasExistingFee(getFeeCode(applicationType))) { skipAction('Duplicate fee already exists'); } if (isWithinGracePeriod()) { scheduleFeeAssessment(gracePeriod.duration); skipAction('Within grace period'); }",
        "criteria": {
          "allowBalance": false,
          "task": [
            "Completeness Check"
          ],
          "status": [
            "Correction Required"
          ],
          "gracePeriodExpired": true
        },
        "action": {
          "assessFees": [
            {
              "feeSchedule": "${config.feeSchedules[applicationType] || 'DEFAULT_ARTS_APP'}",
              "feeCode": "${getFeeCode(applicationType)}",
              "feeQuantity": "${calculateFeeQuantity(applicationType, severity)}",
              "feeInvoice": "Y",
              "feePeriod": "FINAL",
              "feeAmount": "${getFeeAmount(applicationType, severity)}",
              "paymentMethod": "online",
              "paymentProvider": "stripe"
            }
          ],
          "notifications": [
            {
              "type": "email",
              "template": "fee_assessment_notification",
              "recipients": [
                "applicant",
                "reviewer"
              ],
              "data": {
                "feeAmount": "${getFeeAmount(applicationType, severity)}",
                "feeCode": "${getFeeCode(applicationType)}",
                "paymentUrl": "${generatePaymentUrl(applicationId)}"
              }
            },
            {
              "type": "sms",
              "template": "fee_assessment_sms",
              "recipients": [
                "applicant"
              ],
              "data": {
                "feeAmount": "${getFeeAmount(applicationType, severity)}"
              }
            }
          ],
          "feeWaivers": {
            "enabled": true,
            "conditions": [
              "firstTimeApplicant",
              "lowIncomeQualified",
              "emergencyPermit"
            ],
            "autoApproval": false,
            "requiresReview": true
          },
          "paymentIntegration": {
            "createPaymentIntent": true,
            "webhookHandling": true,
            "refundPolicy": "standard"
          }
        },
        "postScript": "logAction('fee_assessed', {task: criteria.task, status: criteria.status, applicationType: applicationType, feeAmount: getFeeAmount(applicationType, severity), paymentIntentId: createPaymentIntent(applicationId, getFeeAmount(applicationType, severity)), timestamp: new Date()}); notifyApplicant('Fee assessed for correction required - Amount: $' + getFeeAmount(applicationType, severity) + ' - Payment link: ' + generatePaymentUrl(applicationId)); scheduleFollowUp('payment_reminder', '24h');"
      }
    ]
  },
  "Building/Electrical/Residential/NA": {
    "WorkflowTaskUpdateAfter": [
      {
        "metadata": {
          "description": "Assess a re-inspection fee for failed electrical inspections",
          "operators": {}
        },
        "preScript": "if (wfTask == 'Electrical Inspection' && wfStatus == 'Failed') { // logic to check if re-inspection fee already exists }",
        "criteria": {
          "allowBalance": false,
          "task": [
            "Electrical Inspection"
          ],
          "status": [
            "Failed"
          ]
        },
        "action": {
          "assessFees": [
            {
              "feeSchedule": "ELEC_INSP",
              "feeCode": "ELEC_REINSP",
              "feeQuantity": 1,
              "feeInvoice": "Y",
              "feePeriod": "FINAL"
            }
          ]
        },
        "postScript": "logAction('Re-inspection fee assessed for failed electrical inspection.'); "
      }
    ]
  },
  "Planning/Residential/New/NA": {
    "ApplicationSubmitAfter": [
      {
        "metadata": {
          "description": "Upon submission, check Permit Type, then update ASI and notify.",
          "operators": {}
        },
        "preScript": "if (AInfo['Permit Type'] != 'New Construction') { cancel = true; }",
        "criteria": {},
        "action": {
          "updateASI": {
            "asiGroup": "SUBMITTAL_INFO",
            "asiSubGroup": null,
            "asiLabel": "Submission Status",
            "asiValue": "Received"
          },
          "notifications": [
            {
              "type": "email",
              "template": "PLN_APP_RECEIVED",
              "recipients": [
                "planning_group",
                "applicant"
              ]
            }
          ]
        },
        "postScript": "logDebug('New Construction application received and processed.');"
      }
    ],
    "WorkflowTaskUpdateAfter": [
      {}
    ]
  }
}